/*
 * This CSS file contains equivalent styles for the Tailwind CSS classes
 * found in SupportPage.jsx.
 *
 * IMPORTANT: In a standard Tailwind CSS workflow, you do NOT manually create
 * a file like this. Tailwind generates optimized CSS from your utility classes
 * during a build process. This file is purely for demonstration purposes
 * to show the underlying CSS properties.
 */

/* Backgrounds */
.bg-gray-700 { background-color: #4b5563; }
.bg-gray-800 { background-color: #374151; }
.bg-gray-900 { background-color: #111827; }
.bg-green-600 { background-color: #059669; }
.bg-red-600 { background-color: #dc2626; }
.bg-blue-600 { background-color: #2563eb; }
.bg-black { background-color: #000000; }
.bg-opacity-75 { background-color: rgba(0, 0, 0, 0.75); } /* Applies to .bg-black in this context */
.bg-gradient-to-r { background-image: linear-gradient(to right, var(--tw-gradient-stops)); }
.from-blue-600 { --tw-gradient-from: #2563eb; --tw-gradient-stops: var(--tw-gradient-from), var(--tw-gradient-to, rgba(37, 99, 235, 0)); }
.to-purple-600 { --tw-gradient-to: #9333ea; }
.bg-green-500 { background-color: #22c55e; } /* For hover state */
.bg-red-500 { background-color: #ef4444; } /* For hover state */
.bg-blue-700 { background-color: #1d4ed8; } /* For hover state */

/* Padding */
.p-6 { padding: 1.5rem; }
.p-4 { padding: 1rem; }
.p-5 { padding: 1.25rem; }
.p-3 { padding: 0.75rem; }
.px-3 { padding-left: 0.75rem; padding-right: 0.75rem; }
.py-1 { padding-top: 0.25rem; padding-bottom: 0.25rem; }
.px-4 { padding-left: 1rem; padding-right: 1rem; }
.py-2 { padding-top: 0.5rem; padding-bottom: 0.5rem; }
.px-5 { padding-left: 1.25rem; padding-right: 1.25rem; }
.py-3 { padding-top: 0.75rem; padding-bottom: 0.75rem; }
.px-6 { padding-left: 1.5rem; padding-right: 1.5rem; }
.py-8 { padding-top: 2rem; padding-bottom: 2rem; }
.px-4 { padding-left: 1rem; padding-right: 1rem; }
.sm\:px-6 { /* On small screens and up */ padding-left: 1.5rem; padding-right: 1.5rem; }
.lg\:px-8 { /* On large screens and up */ padding-left: 2rem; padding-right: 2rem; }

/* Rounded Corners */
.rounded-lg { border-radius: 0.5rem; }
.rounded-full { border-radius: 9999px; }
.rounded-t-lg { border-top-left-radius: 0.5rem; border-top-right-radius: 0.5rem; }
.rounded-b-lg { border-bottom-left-radius: 0.5rem; border-bottom-right-radius: 0.5rem; }
.rounded-br-none { border-bottom-right-radius: 0px; }
.rounded-bl-none { border-bottom-left-radius: 0px; }
.rounded-xl { border-radius: 0.75rem; }

/* Shadow */
.shadow-md { box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06); }
.shadow-xl { box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04); }
.shadow-lg { box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05); }
.shadow-2xl { box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25); }

/* Transitions */
.transition-shadow { transition-property: box-shadow; transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); transition-duration: 150ms; }
.duration-300 { transition-duration: 300ms; }
.transition-transform { transition-property: transform; transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); transition-duration: 150ms; }
.transition-all { transition-property: all; transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); transition-duration: 150ms; }
.ease-in-out { transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }
.transition-colors { transition-property: background-color, border-color, color, fill, stroke; transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); transition-duration: 150ms; }
.duration-200 { transition-duration: 200ms; }

/* Cursor */
.cursor-pointer { cursor: pointer; }

/* Flexbox */
.flex { display: flex; }
.justify-between { justify-content: space-between; }
.items-center { align-items: center; }
.flex-col { flex-direction: column; }
.justify-center { justify-content: center; }
.justify-end { justify-content: flex-end; }
.justify-start { justify-content: flex-start; }
.flex-1 { flex: 1 1 0%; }
.space-x-3 > :not([hidden]) ~ :not([hidden]) { --tw-space-x-reverse: 0; margin-right: calc(0.75rem * var(--tw-space-x-reverse)); margin-left: calc(0.75rem * calc(1 - var(--tw-space-x-reverse))); }
.space-y-4 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; margin-top: calc(1rem * calc(1 - var(--tw-space-y-reverse))); margin-bottom: calc(1rem * var(--tw-space-y-reverse)); }
.space-y-6 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; margin-top: calc(1.5rem * calc(1 - var(--tw-space-y-reverse))); margin-bottom: calc(1.5rem * var(--tw-space-y-reverse)); }
.space-x-6 > :not([hidden]) ~ :not([hidden]) { --tw-space-x-reverse: 0; margin-right: calc(1.5rem * var(--tw-space-x-reverse)); margin-left: calc(1.5rem * calc(1 - var(--tw-space-x-reverse))); }

/* Text Sizing */
.text-xl { font-size: 1.25rem; line-height: 1.75rem; }
.text-2xl { font-size: 1.5rem; line-height: 2rem; }
.text-sm { font-size: 0.875rem; line-height: 1.25rem; }
.text-base { font-size: 1rem; line-height: 1.5rem; }
.text-lg { font-size: 1.125rem; line-height: 1.75rem; }
.text-3xl { font-size: 1.875rem; line-height: 2.25rem; }
.text-5xl { font-size: 3rem; line-height: 1; }
.text-4xl { font-size: 2.25rem; line-height: 2.5rem; }
.text-md { font-size: 1rem; line-height: 1.5rem; } /* Tailwind doesn't have a direct 'text-md', assuming it's equivalent to text-base or custom */

/* Font Weight */
.font-semibold { font-weight: 600; }
.font-bold { font-weight: 700; }
.font-extrabold { font-weight: 800; }
.font-medium { font-weight: 500; }

/* Text Color */
.text-blue-300 { color: #93c5fd; }
.text-gray-400 { color: #9ca3af; }
.text-gray-300 { color: #d1d5db; }
.text-white { color: #ffffff; }
.text-yellow-400 { color: #facc15; }
.text-gray-500 { color: #6b7280; }
.text-blue-400 { color: #60a5fa; }
.text-purple-400 { color: #c084fc; }
.hover\:text-white:hover { color: #ffffff; }
.hover\:text-blue-200:hover { color: #bfdbfe; }
.hover\:text-purple-200:hover { color: #e9d5ff; }

/* Margin */
.mr-3 { margin-right: 0.75rem; }
.mt-2 { margin-top: 0.5rem; }
.mt-4 { margin-top: 1rem; }
.ml-3 { margin-left: 0.75rem; }
.ml-2 { margin-left: 0.5rem; }
.mb-1 { margin-bottom: 0.25rem; }
.mb-12 { margin-bottom: 3rem; }
.mb-4 { margin-bottom: 1rem; }
.mb-8 { margin-bottom: 2rem; }
.mb-2 { margin-bottom: 0.5rem; }
.mb-6 { margin-bottom: 1.5rem; }
.mt-3 { margin-top: 0.75rem; }
.mt-12 { margin-top: 3rem; }

/* Width and Height */
.w-6 { width: 1.5rem; }
.h-6 { height: 1.5rem; }
.w-full { width: 100%; }
.max-w-md { max-width: 28rem; }
.h-[80vh] { height: 80vh; } /* Custom height */
.max-w-4xl { max-width: 56rem; }
.max-w-[80%] { max-width: 80%; } /* Custom width */

/* Transform */
.transform { transform: var(--tw-transform); }
.rotate-180 { --tw-rotate: 180deg; transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }
.hover\:scale-110:hover { --tw-scale-x: 1.1; --tw-scale-y: 1.1; transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }
.hover\:scale-105:hover { --tw-scale-x: 1.05; --tw-scale-y: 1.05; transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

/* Position */
.fixed { position: fixed; }
.inset-0 { top: 0px; right: 0px; bottom: 0px; left: 0px; }
.bottom-8 { bottom: 2rem; }
.right-8 { right: 2rem; }
.z-50 { z-index: 50; }
.relative { position: relative; }

/* Display */
.block { display: block; }

/* Outline & Ring (Focus States) */
.focus\:outline-none:focus { outline: 2px solid transparent; outline-offset: 2px; }
.focus\:ring-2:focus { --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw-ring-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color); box-shadow: var(--tw-ring-shadow); }
.focus\:ring-blue-500:focus { --tw-ring-color: #3b82f6; }
.focus\:border-transparent:focus { border-color: transparent; }
.focus\:ring-offset-2:focus { --tw-ring-offset-width: 2px; }

/* Overflow */
.overflow-y-auto { overflow-y: auto; }

/* Break Words */
.break-words { word-break: break-word; }

/* Opacity */
.opacity-80 { opacity: 0.8; }

/* Min-height */
.min-h-screen { min-height: 100vh; }

/* Drop Shadow */
.drop-shadow-lg { filter: drop-shadow(0 10px 8px rgba(0, 0, 0, 0.04)) drop-shadow(0 4px 3px rgba(0, 0, 0, 0.1)); }

/* Borders */
.border { border-width: 1px; border-style: solid; border-color: #e5e7eb; } /* Default border color, overridden by specific border-color classes */
.border-gray-700 { border-color: #4b5563; }
.border-gray-600 { border-color: #4b5563; }
.border-b { border-bottom-width: 1px; }

/* Custom Scrollbar (Placeholder - actual implementation would need more CSS) */
.custom-scrollbar {
    /* You would typically define custom scrollbar styles here for webkit browsers */
    /* Example: */
    /* &::-webkit-scrollbar { width: 8px; } */
    /* &::-webkit-scrollbar-thumb { background-color: #888; border-radius: 4px; } */
    /* &::-webkit-scrollbar-track { background-color: #f1f1f1; } */
}
